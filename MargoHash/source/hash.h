/*
 * hash.h
 *
 * Заголовочный файл реализаций универсальной хэш-таблицы.
 *
 * Версия 0.5 (от 17.02.2011).
 * 
 * (C) 2011 Александр Дубов, Дмитрий Грязин, Станислав Елизаров, Павел Крюков, гр. 913.
*/

#ifndef HASH_H
#define HASH_H

/*
 * Определение ошибок.
*/
#define H_SUCCESS 0
#define H_MEMERROR -1
#define H_KEYUSED -2
#define H_NOKEY -4

// Хэш-таблица
typedef void* TABLE;

/* 
 * Создание таблицы. 
 * Возвращает NULL при ошибке.
*/
TABLE* createTable();

/*
 * Добавление значения в таблицу. 
 * Первый аргумент — указатель на таблицу, второй — ключ, третий — ссылка на помещаемую информацию.
 * Н_SUCCESS — успешный результат.
 * Н_MEMERROR — ошибка памяти.
 * Н_KEYUSED — ключ уже использовался
*/
int addEntry( TABLE*, char*, void*);

/*
 * Удаление элемента из таблицы. 
 * Первый аргумент — указатель на таблицу, второй — ключ.
 * Н_SUCCESS — найден и удален.
 * Н_MEMERROR — ошибка памяти.
 * Н_NOKEY — ключа нет.
*/
int removeEntry( TABLE*, char*);

/*
 * Возвращение элемента из таблицы. 
 * Первый аргумент — указатель на таблицу, второй — ключ, третий — указатель на ссылку на помещаемую информацию.
 * Н_SUCCESS — найден и возвращен.
 * Н_MEMERROR — ошибка памяти.
 * Н_NOKEY — ключа нет.
*/
int getEntry( TABLE*, char*, void**);

/* 
 * Удаление всей таблицы. 
 * Аргумент — адрес на таблицу.
 * Н_SUCCESS — таблица удалена.
 * Н_MEMERROR — ошибка памяти.
*/
int deleteTable( TABLE*);

#endif // HASH_H